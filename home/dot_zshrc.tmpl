# load compinit
autoload -Uz compinit
compinit

# private values
source "$HOME/.zshrc.private"

{{ if stat "/opt/homebrew/bin/kubectl" -}}
# add kubectl completion
source <(kubectl completion zsh)
alias k=kubectl

{{ end -}}

{{ if stat "/opt/homebrew/bin/gcloud" -}}
# add gcloud completion
source "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc"

# gcloud alias
alias gcloud-dailybrain='gcloud config set account {{ .email_dailybrain }}'
alias gcloud-sephoraeme='gcloud config set account {{ .email_sephoraeme }}'

alias gcloud-s4a-dev='gcloud config set project s4a-coredata-dev'

{{ end -}}

# better history
alias history='history 1'
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000000
SAVEHIST=10000000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.

# default editor
export EDITOR=vim

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

{{ if stat "/Library/Java/JavaVirtualMachines/temurin-8.jdk/Contents/Home" -}}
# force temurin
export JAVA_HOME=`/usr/libexec/java_home -v 1.8.0_462`

{{ end -}}

# enable starship
eval "$(starship init zsh)"